=================================
Test cases a function that adds 2 integers
=================================

This module defines the function `add_integer(a, b=98)`.
The function returns the sum of two integers or floats.

>>> add_integer = __import__('0-add_integer').add_integer

Adding two positive integers: 10 + 5
>>> add_integer(10, 5)
15

Adding one positive and one negative integer: 10 + (-5)
>>> add_integer(10, -5)
5

Adding two positive floats: 10.5 + 2.5
>>> add_integer(10.5, 2.5)
13

Adding two negative floats: -10.5 + (-2.5)
>>> add_integer(-10.5, -2.5)
-13

Adding two small floating-point numbers: 0.1 + 0.2
>>> add_integer(0.1, 0.2)
0

Adding two large integers: 100 + 200
>>> add_integer(100, 200)
300

Adding only one integer (using default value for b): 0 + 98
>>> add_integer(0)
98

Attempting to add a string and an integer: 'abc' + 5
>>> add_integer('abc', 5)
Traceback (most recent call last):
    ...
TypeError: a must be an integer or float

Attempting to add an integer and a string: 3 + 'abc'
>>> add_integer(3, 'abc')
Traceback (most recent call last):
    ...
TypeError: b must be an integer or float

Attempting to add two strings: 'hello' + 'abc'
>>> add_integer('hello', 'abc')
Traceback (most recent call last):
    ...
TypeError: a must be an integer or float

Attempting to add infinity: float('inf') + 1
>>> add_integer(float('inf'), 1)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

Attempting to add NaN (Not a Number): float('nan')
>>> add_integer(float('nan'))
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer
